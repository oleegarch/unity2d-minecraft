— Выключить рендеринг чанков которые вне видимости поля зрения пользователя (будем только их хранить для коллайдеров)
— Научить мобов бегать (режим опасности, когда пользователь ударяет моба)
— В верстаке при крафте показывать прогресс крафта. Зависит от CraftIngredient.Duration
— При дропе предметов в игровом режиме они летят слишком быстро
— Логика Shift в инвентарях
— Выбрасывание предметов в инвентаре через drop outside
— BreakableByGravity должен учитывать не только верхние блоки после поломки, но и боковые
— Растения не генерируются до конца если не вмещаются в чанк
— Логика распыления предметов в инвентаре зажатой клавишей мыши (с левой клавишей мыши происхоидт деление на части, а правой по единичке)
— А что если мы хотим в однотипных предметах по крафт системе использовать конкретный вариант крафта? Например, сундук делается из любого дерева, но мы можем хотеть использовать только берёзовые доски...
— При отдалении экрана линии в HoveredBlockOutlineRenderer пропадают.
— При ломании блоков которые ломаются группой (BreakableByGravity) — нужно отображать и на них анимацию ломания в HoveredBlockBreaker
— Дроп предметов с блоков реализовать программный. С листвы не падает листва если её ломать рукой, а саженец с какой-то вероятностью.
— В SkyController луна и солнце на большом экране рисуется с невалидным размером. В идеале перенести реализацию SkyController в Canvas.
— В SkyController солнце и луна должны сразу появлятся после отсутствия видимости на экране другого (а не за горизонтом).
— В SkyController добавить фазы луны.
— В BlockDatabase метод SetBlocksIdSortedInList должен проверить наличие блока пустоты и установить ему 0 идентификатор (сейчас он устанавливает Air блоку нулевой индекс только потому что я сам в лист блокинфо положил его на первое место)
— WorldController это компонент жизненного цикла. Всю логику "Startup" реализовать в нём (как-нибудь с переменной ~[SerializeField] private MonoBehaviour[] components; и вызовом последовательно Initialize).
— ChunkColliderBuilder реализовать полноценные AddSquare+RemoveSquare.
— Бывает баг что в редакторе unity в иерархии объектов остаётся не сгенерированный ChunkRenderer prefab.
...
— Инструменты (кирки, лопаты, топоры)
— Прочность инструментов
— Очки здоровья (Health Points)
— Генерация прогулочных шахт
— Падение блоков под действием гравитации: при генерации мира отсутствует, но при ломании блоков начинает действовать
— Хранение изменений в чанках.
— Освещение.